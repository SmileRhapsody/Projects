/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageFlight;

import Business.Flight;
import Business.FlightDirectory;
import static UserInterface.MainFrame.showInt;
import static UserInterface.MainFrame.toInt;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Administrator
 */

public class ViewFlightJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewFlightJPanel
     */
    private FlightDirectory flightdirectory;
    private JPanel CardSequenceJPanel;
    private Flight flight;
    private Boolean have;
    public ViewFlightJPanel(JPanel CardSequenceJPanel, Flight flight, FlightDirectory flightdirectory) {
        this.flightdirectory = flightdirectory;
        this.CardSequenceJPanel = CardSequenceJPanel;
        this.flight = flight;
        initComponents();
        display();
    }
    
    public void display(){
        airlinerName.setText(flight.getAirlinerName());
        airplaneName.setText(flight.getAirplaneName());
        fName.setText(flight.getFlightName());
        fLocation.setText(flight.getfLocation());
        tLocation.setText(flight.gettLocation());
        Calendar dcal = Calendar.getInstance();
        dcal.setTime(flight.getdTime());
        dyear.setText(Integer.toString(dcal.get(Calendar.YEAR)));
        dmonth.setText(Integer.toString(dcal.get(Calendar.MONTH)+1));
        dday.setText(Integer.toString(dcal.get(Calendar.DATE)));
        dhour.setText(Integer.toString(flight.getdTime().getHours()));
        dminute.setText(Integer.toString(dcal.get(Calendar.MINUTE)));
        Calendar acal = Calendar.getInstance();
        acal.setTime(flight.getaTime());
        ayear.setText(Integer.toString(acal.get(Calendar.YEAR)));
        amonth.setText(Integer.toString(acal.get(Calendar.MONTH)+1));
        aday.setText(Integer.toString(acal.get(Calendar.DATE)));
        ahour.setText(Integer.toString(flight.getaTime().getHours()));
        aminute.setText(Integer.toString(acal.get(Calendar.MINUTE)));
    }

    private void backAction(){
        CardSequenceJPanel.remove(this);
        Component[] componentArray = CardSequenceJPanel.getComponents();
        Component component = componentArray[componentArray.length-1];
        ManageFlightsJPanel mf = (ManageFlightsJPanel) component;
        mf.populate();
        CardLayout layout = (CardLayout) CardSequenceJPanel.getLayout();
        layout.show(CardSequenceJPanel, "manageflight");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        dhour = new javax.swing.JTextField();
        dminute = new javax.swing.JTextField();
        dday = new javax.swing.JTextField();
        dmonth = new javax.swing.JTextField();
        dyear = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fName = new javax.swing.JTextField();
        fLocation = new javax.swing.JTextField();
        tLocation = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        aday = new javax.swing.JTextField();
        aminute = new javax.swing.JTextField();
        ahour = new javax.swing.JTextField();
        amonth = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        ayear = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        airlinerName = new javax.swing.JTextField();
        airplaneName = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        jLabel6.setText("Year");

        dhour.setEnabled(false);
        dhour.setMargin(null);

        dminute.setEnabled(false);
        dminute.setMargin(null);

        dday.setEnabled(false);
        dday.setMargin(null);

        dmonth.setEnabled(false);
        dmonth.setMargin(null);

        dyear.setEnabled(false);
        dyear.setMargin(null);

        jLabel11.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel11.setText("View Flight");

        jLabel4.setText("Departure Date:");

        jLabel5.setText("Arrival Date:");

        jLabel2.setText("Source:");

        jLabel3.setText("Destination:");

        fName.setEnabled(false);
        fName.setMargin(null);

        fLocation.setEnabled(false);
        fLocation.setMargin(null);

        tLocation.setEnabled(false);
        tLocation.setMargin(null);

        jButton2.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jButton2.setText("<<  Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        saveBtn.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        saveBtn.setText("Save");
        saveBtn.setEnabled(false);
        saveBtn.setMargin(null);
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Flight Name:");

        aday.setEnabled(false);
        aday.setMargin(null);
        aday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adayActionPerformed(evt);
            }
        });

        aminute.setEnabled(false);
        aminute.setMargin(null);

        ahour.setEnabled(false);
        ahour.setMargin(null);

        amonth.setEnabled(false);
        amonth.setMargin(null);

        jLabel8.setText("Day");

        jLabel9.setText("Hour");

        jLabel10.setText("Minute");

        ayear.setEnabled(false);
        ayear.setMargin(null);

        jLabel7.setText("Month");

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        airlinerName.setEnabled(false);

        airplaneName.setEnabled(false);

        jLabel12.setText("Airplane Name:");

        jLabel13.setText("Airliner Name:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(jLabel6)
                                        .addGap(51, 51, 51)
                                        .addComponent(jLabel7)
                                        .addGap(54, 54, 54)
                                        .addComponent(jLabel8)
                                        .addGap(60, 60, 60)
                                        .addComponent(jLabel9)
                                        .addGap(50, 50, 50)
                                        .addComponent(jLabel10))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ayear, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dyear, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(amonth, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dmonth, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(dday, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(dhour, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(dminute, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(aday, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(ahour, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(aminute, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(70, 70, 70)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fName)
                                    .addComponent(fLocation)
                                    .addComponent(tLocation)
                                    .addComponent(airplaneName)
                                    .addComponent(airlinerName, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(144, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121)
                        .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(208, 208, 208))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(310, 310, 310))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addGap(3, 3, 3)
                .addComponent(jLabel11)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel13))
                    .addComponent(airlinerName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(airplaneName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(fName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(jLabel10))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel6)
                        .addComponent(jLabel8)))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dhour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dminute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ayear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ahour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aminute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateBtn)
                    .addComponent(saveBtn))
                .addGap(33, 33, 33))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        backAction();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
        have = true;
        if (fName.getText().isEmpty() || fLocation.getText().isEmpty() || tLocation.getText().isEmpty() ||
            dyear.getText().isEmpty() || dmonth.getText().isEmpty() ||
            dday.getText().isEmpty() || dhour.getText().isEmpty() || dminute.getText().isEmpty() ||
            dyear.getText().isEmpty() || dmonth.getText().isEmpty() || dday.getText().isEmpty() ||
            dhour.getText().isEmpty() || dminute.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill in the blank", "Warning", JOptionPane.WARNING_MESSAGE);
        }else if(toInt(dyear.getText()) && toInt(dmonth.getText()) && toInt(dday.getText()) && toInt(dhour.getText()) &&
            toInt(dminute.getText()) && toInt(ayear.getText()) && toInt(amonth.getText()) && toInt(aday.getText()) &&
            toInt(ahour.getText()) && toInt(aminute.getText())){
            Calendar cal1 = Calendar.getInstance();
            cal1.set(Integer.parseInt(dyear.getText()), Integer.parseInt(dmonth.getText())-1, 1);
            int maxday1 = cal1.getActualMaximum(Calendar.DAY_OF_MONTH);
            Calendar cal2 = Calendar.getInstance();
            cal2.set(Integer.parseInt(ayear.getText()), Integer.parseInt(amonth.getText())-1, 1);
            int maxday2 = cal2.getActualMaximum(Calendar.DAY_OF_MONTH);
            Calendar dCal = Calendar.getInstance();
            dCal.set(Integer.parseInt(dyear.getText()), Integer.parseInt(dmonth.getText())-1, Integer.parseInt(dday.getText()),
                Integer.parseInt(dhour.getText()), Integer.parseInt(dminute.getText()));
            Calendar aCal = Calendar.getInstance();
            aCal.set(Integer.parseInt(ayear.getText()), Integer.parseInt(amonth.getText())-1, Integer.parseInt(aday.getText()),
                Integer.parseInt(ahour.getText()), Integer.parseInt(aminute.getText()));
            if(Integer.parseInt(dyear.getText()) >= 2018 && Integer.parseInt(ayear.getText()) >= 2018){
                if( Integer.parseInt(dmonth.getText()) <= 12 && Integer.parseInt(dmonth.getText()) > 0 &&
                    Integer.parseInt(amonth.getText()) <= 12 && Integer.parseInt(amonth.getText()) > 0 ){
                    if(Integer.parseInt(dday.getText()) <= maxday1 && Integer.parseInt(aday.getText()) <= maxday2 &&
                        Integer.parseInt(dday.getText()) > 0 && Integer.parseInt(aday.getText()) > 0){
                        if(Integer.parseInt(dhour.getText()) < 24 && Integer.parseInt(ahour.getText()) < 24){
                            if(Integer.parseInt(dminute.getText()) < 60 && Integer.parseInt(aminute.getText()) < 60){
                                if(dCal.getTime().getTime() < aCal.getTime().getTime()){
                                    ArrayList <Flight> testflightlist = new ArrayList<>();
                                    for(Flight flight: flightdirectory.getFlightList()){
                                        testflightlist.add(flight);
                                    }
                                    testflightlist.remove(flight);
                                    for(Flight flighttest : testflightlist){
                                        if( ((flighttest.getdTime().getTime() <= dCal.getTime().getTime()) &
                                            (flighttest.getaTime().getTime() >= dCal.getTime().getTime()))  ||
                                        ((flighttest.getdTime().getTime() <= aCal.getTime().getTime()) &
                                            (flighttest.getaTime().getTime() >= aCal.getTime().getTime()))  ||
                                                ((flighttest.getdTime().getTime() >= dCal.getTime().getTime()) & 
                                                (flighttest.getaTime().getTime() <= aCal.getTime().getTime()))){
                                        have  = false;
                                        } 
                                    }
                                    
                                    if(have == true){
                                        flight.setFlightName(fName.getText());
                                        flight.setfLocation(fLocation.getText());
                                        flight.settLocation(tLocation.getText());
                                        flight.setdTime(dCal.getTime());
                                        flight.setaTime(aCal.getTime());
                                        JOptionPane.showMessageDialog(null, "Flight updated successfully");
                                    }else{
                                        JOptionPane.showMessageDialog(null, "A flight has been assigned during this time", "Warning",JOptionPane.WARNING_MESSAGE);
                                    }
                            }else{
                                JOptionPane.showMessageDialog(null, "departure time must be ealer than arrival time", "Warning",JOptionPane.WARNING_MESSAGE);
                            }
                        }else{
                            JOptionPane.showMessageDialog(null, "Minute can not be greater than 60", "Warning", JOptionPane.WARNING_MESSAGE);
                        }
                    }else{
                        JOptionPane.showMessageDialog(null, "Hour can not be greater than 23", "Warning", JOptionPane.WARNING_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Please enter the valid day", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(null, "Month must be between 1 and 12", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Year can not be less than 2018", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        }else{
            showInt(dyear.getText());
            showInt(dmonth.getText());
            showInt(dday.getText());
            showInt(dhour.getText());
            showInt(dminute.getText());
            showInt(ayear.getText());
            showInt(amonth.getText());
            showInt(aday.getText());
            showInt(ahour.getText());
            showInt(aminute.getText());
        }
        fName.setEnabled(false);
        fLocation.setEnabled(false);
        tLocation.setEnabled(false);
        dyear.setEnabled(false);
        dmonth.setEnabled(false);
        dday.setEnabled(false);
        dhour.setEnabled(false);
        dminute.setEnabled(false);
        ayear.setEnabled(false);
        amonth.setEnabled(false);
        aday.setEnabled(false);
        ahour.setEnabled(false);
        aminute.setEnabled(false);
        saveBtn.setEnabled(false);
        updateBtn.setEnabled(true);
        display();
    }//GEN-LAST:event_saveBtnActionPerformed

    private void adayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adayActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        fName.setEnabled(true);
        fLocation.setEnabled(true);
        tLocation.setEnabled(true);
        dyear.setEnabled(true);
        dmonth.setEnabled(true);
        dday.setEnabled(true);
        dhour.setEnabled(true);
        dminute.setEnabled(true);
        ayear.setEnabled(true);
        amonth.setEnabled(true);
        aday.setEnabled(true);
        ahour.setEnabled(true);
        aminute.setEnabled(true);
        saveBtn.setEnabled(true);
        updateBtn.setEnabled(false);
    }//GEN-LAST:event_updateBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aday;
    private javax.swing.JTextField ahour;
    private javax.swing.JTextField airlinerName;
    private javax.swing.JTextField airplaneName;
    private javax.swing.JTextField aminute;
    private javax.swing.JTextField amonth;
    private javax.swing.JTextField ayear;
    private javax.swing.JTextField dday;
    private javax.swing.JTextField dhour;
    private javax.swing.JTextField dminute;
    private javax.swing.JTextField dmonth;
    private javax.swing.JTextField dyear;
    private javax.swing.JTextField fLocation;
    private javax.swing.JTextField fName;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField tLocation;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
