/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Order.Order;
import Business.Supplier.Product;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class ManageStatisticsJPanel extends javax.swing.JPanel{
    private JPanel userProcessContainer;
    private EcoSystem system;
    /**
     * Creates new form ManageStatisticsJPanel
     */
    public ManageStatisticsJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        populateNetworkComboBox();
    }
    
    public void populateNetworkComboBox(){
        networkComboBox.removeAllItems();
        for(Network network : system.getNetworkList()){
            networkComboBox.addItem(network);
        }
    }
    
    public void populateEnterpriseComboBox(Network network){
        exportComboBox.removeAllItems();
        
        for(Enterprise enterprise : network.getEntList().getEnterpriseList()){
            if("Export".equals(enterprise.getEntType().getValue()))
            exportComboBox.addItem(enterprise);
        }
    }
    
    public void populateTable(Enterprise enterprise){
        DefaultTableModel model = (DefaultTableModel)enterProductTable.getModel();
        model.setRowCount(0);
        List<Product> products = new ArrayList<>();
        for(Order order : enterprise.getDatastore().getOrderList().getOrders()){
            for(Product pro : order.getProducts()){
                products.add(pro);
            }
        }
        List<String> nameAndSupplier = new ArrayList<>();
        for(Product p : products){
            if(!nameAndSupplier.contains(p.getName()+" "+p.getSupplierName())){
                nameAndSupplier.add(p.getName()+" "+p.getSupplierName());
            }
        }
        List<Product> mergedProduct = new ArrayList<>();
        for(String s : nameAndSupplier){
            List<Product> sum = new ArrayList<>();
            for(Product p : products){
                if((p.getName()+" "+p.getSupplierName()).equals(s)){
                    sum.add(p);
                }
            }
            double revenue = 0;
            String name = "";
            String supplier = "";
            for(Product p : sum){
                name = p.getName();
                supplier = p.getSupplierName();
                revenue += (p.getSellPrice()-p.getOriginPrice()-p.getShippingCost())*p.getNum();
            }
            Product pro = new Product(name,supplier,revenue);
            mergedProduct.add(pro);
        }
        Collections.sort(mergedProduct, new Comparator<Product>(){
            @Override
            public int compare(Product t, Product t1) {
                return Double.compare(t1.getRevenue(), t.getRevenue());
            }
        });
        for(Product p : mergedProduct){
            Object[] row = new Object[3];
            row[0] = p;
            row[1] = p.getSupplierName();
            row[2] = p.getRevenue();
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        enterProductTable = new javax.swing.JTable();
        search = new javax.swing.JButton();
        producdtSummary = new javax.swing.JButton();
        exportComboBox = new javax.swing.JComboBox();
        revenueSummary = new javax.swing.JButton();
        networkComboBox = new javax.swing.JComboBox();
        back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setText("Export");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setText("NetWork");

        enterProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Supplier", "Revenue"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterProductTable);

        search.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        producdtSummary.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        producdtSummary.setText("Product Summary");
        producdtSummary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                producdtSummaryActionPerformed(evt);
            }
        });

        exportComboBox.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        exportComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        revenueSummary.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        revenueSummary.setText("Revenue Summary");
        revenueSummary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revenueSummaryActionPerformed(evt);
            }
        });

        networkComboBox.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        networkComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkComboBoxActionPerformed(evt);
            }
        });

        back.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        back.setText("<<  Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel1.setText("Exports' Product Revenue Ranking");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(producdtSummary)
                        .addGap(18, 18, 18)
                        .addComponent(revenueSummary))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(networkComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(exportComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 79, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(back))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(back)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(networkComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(search)
                    .addComponent(exportComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(producdtSummary)
                    .addComponent(revenueSummary))
                .addContainerGap(22, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        Enterprise enterprise = (Enterprise)exportComboBox.getSelectedItem();
        if (enterprise != null){
            populateTable(enterprise);
        }

    }//GEN-LAST:event_searchActionPerformed

    private void producdtSummaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_producdtSummaryActionPerformed
        // TODO add your handling code here:
        SummaryJPanel sjp = new SummaryJPanel(userProcessContainer, system);
        userProcessContainer.add("Summary",sjp);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_producdtSummaryActionPerformed

    private void revenueSummaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revenueSummaryActionPerformed
        // TODO add your handling code here:
        RevenueJPanel rjp = new RevenueJPanel(userProcessContainer, system);
        userProcessContainer.add("Summary",rjp);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_revenueSummaryActionPerformed

    private void networkComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkComboBoxActionPerformed
        // TODO add your handling code here:
        Network network = (Network)networkComboBox.getSelectedItem();
        if (network != null){
            populateEnterpriseComboBox(network);
        }
    }//GEN-LAST:event_networkComboBoxActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SysAdmWorkAreaJPanel sysAdminwjp = (SysAdmWorkAreaJPanel) component;
        sysAdminwjp.populateTree();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JTable enterProductTable;
    private javax.swing.JComboBox exportComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox networkComboBox;
    private javax.swing.JButton producdtSummary;
    private javax.swing.JButton revenueSummary;
    private javax.swing.JButton search;
    // End of variables declaration//GEN-END:variables

}
